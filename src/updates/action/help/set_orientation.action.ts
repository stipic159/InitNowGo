import { Bot, BotUpdate, SessionContext } from "../../../lib";
export class OrientationAction extends BotUpdate {
  constructor() {
    super({
      pattern: "set_orientation",
      desc: "—É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏—é",
      category: ["üè† –ë–∞–∑–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã"],
      isPrivateOnly: true,
    });
  }

  async execute(bot: Bot, ctx: SessionContext): Promise<void> {
    if (!ctx?.from?.id) return;
    await ctx.deleteMessage();
    const message = await ctx.reply("–í–≤–µ–¥–∏—Ç–µ —Å–ª–æ–≤–æ, –∫–æ—Ç–æ—Ä–æ–µ –æ–ø–∏—Å—ã–≤–∞–µ—Ç –≤–∞—Å (–æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏—é)!");
    ctx.session.waitingForOrientation = true;
    ctx.session.pendingOrientation = {
      userId: ctx.from.id,
      callbackMessageId: message.message_id,
    };
  }
}
