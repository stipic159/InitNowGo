import { Bot, BotUpdate, config, Context, ExecuteParams } from "../../../lib";

export class SupportCommand extends BotUpdate {
  constructor() {
    super({
      pattern: "support",
      aliases: ["sup"],
      desc: "–ü–æ–¥–¥–µ—Ä–∂–∫–∞, –ø–æ–º–æ—â—å",
      category: ["üè† –ë–∞–∑–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã"],
    });
  }

  async execute(bot: Bot, ctx: Context, { text, args, Logger }: ExecuteParams): Promise<void> {
    if (!ctx.msg) return;
    await ctx.reply("–ñ–¥–µ–º –≤–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã/–∂–∞–ª–æ–±—ã/–∏–¥–µ–∏/–ø—Ä–µ–¥–ª–æ–∂–µ–∏—è\n\nüëá<b>–ü–æ–¥–¥–µ—Ä–∂–∫–∞</b>üëá", {
      reply_parameters: { message_id: ctx.msg?.message_id },
      parse_mode: "HTML",
      reply_markup: {
        inline_keyboard: [
          [{ text: "–ß–∞—Ç —Å –±–æ—Ç–æ–º", url: `${(await bot.api.getChat(config.get("BOT").SUPPORT_ID)).username}.t.me` }],
        ],
      },
    });
  }
}
